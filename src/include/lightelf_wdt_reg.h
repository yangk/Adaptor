/*
 * Copyright (c) 2006-2015 Triductor Technology, Inc.
 *           All Rights Reserved Worldwide
 *
 * Filename: lightelf_wdt_reg.h
 * Author  : $Author: Eric $
 * Date    : Jun/01/2015
 * Version : $Revision: 1001 $
 * Purpose : Describe all the available registers for WDT of LIGHTELF.
             This file is automatically generated by Register Parser.
 */

#ifndef __LIGHTELF_WDT_REG_H__
#define __LIGHTELF_WDT_REG_H__

#ifndef REG32
    #define REG32(x)                    (*(volatile unsigned int *)(x))
#endif

#ifndef _REG_FLD_OP_
    #define _REG_FLD_OP_

    // Register Field Mask
    #define FLD_MASK(s,e)              ((0xffffffff >> (31-(e)+(s))) << (s))

    // Register Field Mask Write-Data
    // s -- Start of Bit  e -- End   of Bit
    // v -- Value
    #define FLD_MWD(s,e,v)              (((v) << (s)) & FLD_MASK((s),(e)))

    // Register Field Mask Read-Data
    // s -- Start of Bit  e -- End   of Bit
    // v -- Value
    #define FLD_MRD(s,e,v)              (((v) & FLD_MASK((s),(e))) >> (s))

    // Register Field Write operation
    // a -- Address   s -- Start of Bit
    // v -- Value     e -- End   of Bit
    #define OP_FLD_WR(a,s,e,v)          (REG32((a)) = (((v) << (s)) & FLD_MASK((s),(e))) | (REG32((a)) & ~FLD_MASK((s),(e))))
    #define OP_FLD_WR_EXC(a,s,e,v)      (REG32((a)) = (((v) << (s)) & FLD_MASK((s),(e))))

    // Register Field Read operation
    #define OP_FLD_RD(a,s,e)            ((REG32((a)) & FLD_MASK((s),(e))) >> (s))

#endif

//Address Offset for multi-instance mode only
#ifndef  REG_OFFSET_WDT
    #define  REG_OFFSET_WDT  (0x0)
#endif

// Base address
#ifndef REG_BASE_WDT
    #define  REG_BASE_WDT    (0xf2300000)
#endif



//------------------------------------
// WDT Registers
//------------------------------------
#define  REG_WDT_WDOG_CFG                                         (REG_BASE_WDT + 0x00)
    //Read/Write-Register Using Address
    #define  RD_WDT_WDOG_CFG()                                    (REG32(REG_WDT_WDOG_CFG))
    #define  WR_WDT_WDOG_CFG(v)                                   (REG32(REG_WDT_WDOG_CFG) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_WDT_WDOG_CFG()                             (0x8FFFFFFF)  
    #define  REG_WMASK_WDT_WDOG_CFG()                             (0x8FFFFFFF)

    //Field: WDT_WDOG_CFG
    #define  FLD_LSB_WDT_WDOG_CFG()                               (0)
    #define  FLD_MSB_WDT_WDOG_CFG()                               (27)
    #define  FLD_MASK_WDT_WDOG_CFG()                              (FLD_MASK(0, 27))
    #define  FLD_MWD_WDT_WDOG_CFG(v)                              (FLD_MWD(0, 27, v))
    #define  FLD_MRD_WDT_WDOG_CFG(v)                              (FLD_MRD(0, 27, v))
    #define  SET_WDT_WDOG_CFG(v)                                  OP_FLD_WR(REG_WDT_WDOG_CFG, 0, 27, v)
    #define  GET_WDT_WDOG_CFG()                                   OP_FLD_RD(REG_WDT_WDOG_CFG, 0, 27)
    #define  RST_WDT_WDOG_CFG()                                   OP_FLD_WR(REG_WDT_WDOG_CFG, 0, 27, 0xfffffff)

    //Field: WDT_WDOG_EN
    #define  FLD_LSB_WDT_WDOG_EN()                                (31)
    #define  FLD_MSB_WDT_WDOG_EN()                                (31)
    #define  FLD_MASK_WDT_WDOG_EN()                               (FLD_MASK(31, 31))
    #define  FLD_MWD_WDT_WDOG_EN(v)                               (FLD_MWD(31, 31, v))
    #define  FLD_MRD_WDT_WDOG_EN(v)                               (FLD_MRD(31, 31, v))
    #define  SET_WDT_WDOG_EN(v)                                   OP_FLD_WR(REG_WDT_WDOG_CFG, 31, 31, v)
    #define  GET_WDT_WDOG_EN()                                    OP_FLD_RD(REG_WDT_WDOG_CFG, 31, 31)
    #define  RST_WDT_WDOG_EN()                                    OP_FLD_WR(REG_WDT_WDOG_CFG, 31, 31, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_WDT_WDOG_CFG(WDOG_CFG,WDOG_EN) \
                (WR_WDT_WDOG_CFG( \
                  (FLD_MWD_WDT_WDOG_CFG(WDOG_CFG))                                     | \
                  (FLD_MWD_WDT_WDOG_EN(WDOG_EN))                                         \
                ))


#define  REG_WDT_WDOG_CLR                                         (REG_BASE_WDT + 0x04)
    //Read/Write-Register Using Address
    #define  RD_WDT_WDOG_CLR()                                    (REG32(REG_WDT_WDOG_CLR))
    #define  WR_WDT_WDOG_CLR(v)                                   (REG32(REG_WDT_WDOG_CLR) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_WDT_WDOG_CLR()                             (0x0)  
    #define  REG_WMASK_WDT_WDOG_CLR()                             (0x1)

    //Field: WDT_WDOG_CLR
    #define  FLD_LSB_WDT_WDOG_CLR()                               (0)
    #define  FLD_MSB_WDT_WDOG_CLR()                               (0)
    #define  FLD_MASK_WDT_WDOG_CLR()                              (FLD_MASK(0, 0))
    #define  FLD_MWD_WDT_WDOG_CLR(v)                              (FLD_MWD(0, 0, v))
    #define  FLD_MRD_WDT_WDOG_CLR(v)                              (FLD_MRD(0, 0, v))
    #define  SET_WDT_WDOG_CLR(v)                                  OP_FLD_WR_EXC(REG_WDT_WDOG_CLR, 0, 0, v)
    #define  RST_WDT_WDOG_CLR()                                   OP_FLD_WR_EXC(REG_WDT_WDOG_CLR, 0, 0, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_WDT_WDOG_CLR(WDOG_CLR) \
                (WR_WDT_WDOG_CLR( \
                  (FLD_MWD_WDT_WDOG_CLR(WDOG_CLR))                                       \
                ))


#define  REG_WDT_WDOG_IND                                         (REG_BASE_WDT + 0x08)
    //Read/Write-Register Using Address
    #define  RD_WDT_WDOG_IND()                                    (REG32(REG_WDT_WDOG_IND))
    #define  WR_WDT_WDOG_IND(v)                                   (REG32(REG_WDT_WDOG_IND) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_WDT_WDOG_IND()                             (0xFFFF)  
    #define  REG_WMASK_WDT_WDOG_IND()                             (0x0)

    //Field: WDT_WDOG_IND
    #define  FLD_LSB_WDT_WDOG_IND()                               (0)
    #define  FLD_MSB_WDT_WDOG_IND()                               (15)
    #define  FLD_MASK_WDT_WDOG_IND()                              (FLD_MASK(0, 15))
    #define  FLD_MWD_WDT_WDOG_IND(v)                              (FLD_MWD(0, 15, v))
    #define  FLD_MRD_WDT_WDOG_IND(v)                              (FLD_MRD(0, 15, v))
    #define  GET_WDT_WDOG_IND()                                   OP_FLD_RD(REG_WDT_WDOG_IND, 0, 15)

    //Write-Register Using Field-Name
    #define  WRF_WDT_WDOG_IND(WDOG_IND) \
                (WR_WDT_WDOG_IND( \
   \
                ))


#define  REG_WDT_WDOG_RST_CNT_CFG                                 (REG_BASE_WDT + 0x0c)
    //Read/Write-Register Using Address
    #define  RD_WDT_WDOG_RST_CNT_CFG()                            (REG32(REG_WDT_WDOG_RST_CNT_CFG))
    #define  WR_WDT_WDOG_RST_CNT_CFG(v)                           (REG32(REG_WDT_WDOG_RST_CNT_CFG) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_WDT_WDOG_RST_CNT_CFG()                     (0x1FFFFFF)  
    #define  REG_WMASK_WDT_WDOG_RST_CNT_CFG()                     (0x1FFFFFF)

    //Field: WDT_WDOG_RST_CNT_CFG
    #define  FLD_LSB_WDT_WDOG_RST_CNT_CFG()                       (0)
    #define  FLD_MSB_WDT_WDOG_RST_CNT_CFG()                       (24)
    #define  FLD_MASK_WDT_WDOG_RST_CNT_CFG()                      (FLD_MASK(0, 24))
    #define  FLD_MWD_WDT_WDOG_RST_CNT_CFG(v)                      (FLD_MWD(0, 24, v))
    #define  FLD_MRD_WDT_WDOG_RST_CNT_CFG(v)                      (FLD_MRD(0, 24, v))
    #define  SET_WDT_WDOG_RST_CNT_CFG(v)                          OP_FLD_WR_EXC(REG_WDT_WDOG_RST_CNT_CFG, 0, 24, v)
    #define  GET_WDT_WDOG_RST_CNT_CFG()                           OP_FLD_RD(REG_WDT_WDOG_RST_CNT_CFG, 0, 24)
    #define  RST_WDT_WDOG_RST_CNT_CFG()                           OP_FLD_WR_EXC(REG_WDT_WDOG_RST_CNT_CFG, 0, 24, 0x1fffff)

    //Write-Register Using Field-Name
    #define  WRF_WDT_WDOG_RST_CNT_CFG(WDOG_RST_CNT_CFG) \
                (WR_WDT_WDOG_RST_CNT_CFG( \
                  (FLD_MWD_WDT_WDOG_RST_CNT_CFG(WDOG_RST_CNT_CFG))                       \
                ))


#define  REG_WDT_WDOG_RST_CFG                                     (REG_BASE_WDT + 0x10)
    //Read/Write-Register Using Address
    #define  RD_WDT_WDOG_RST_CFG()                                (REG32(REG_WDT_WDOG_RST_CFG))
    #define  WR_WDT_WDOG_RST_CFG(v)                               (REG32(REG_WDT_WDOG_RST_CFG) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_WDT_WDOG_RST_CFG()                         (0x7)  
    #define  REG_WMASK_WDT_WDOG_RST_CFG()                         (0x7)

    //Field: WDT_WDOG_GLB_RST_EN
    #define  FLD_LSB_WDT_WDOG_GLB_RST_EN()                        (0)
    #define  FLD_MSB_WDT_WDOG_GLB_RST_EN()                        (0)
    #define  FLD_MASK_WDT_WDOG_GLB_RST_EN()                       (FLD_MASK(0, 0))
    #define  FLD_MWD_WDT_WDOG_GLB_RST_EN(v)                       (FLD_MWD(0, 0, v))
    #define  FLD_MRD_WDT_WDOG_GLB_RST_EN(v)                       (FLD_MRD(0, 0, v))
    #define  SET_WDT_WDOG_GLB_RST_EN(v)                           OP_FLD_WR(REG_WDT_WDOG_RST_CFG, 0, 0, v)
    #define  GET_WDT_WDOG_GLB_RST_EN()                            OP_FLD_RD(REG_WDT_WDOG_RST_CFG, 0, 0)
    #define  RST_WDT_WDOG_GLB_RST_EN()                            OP_FLD_WR(REG_WDT_WDOG_RST_CFG, 0, 0, 0x0)

    //Field: WDT_WDOG_GPIO_RST_EN
    #define  FLD_LSB_WDT_WDOG_GPIO_RST_EN()                       (1)
    #define  FLD_MSB_WDT_WDOG_GPIO_RST_EN()                       (1)
    #define  FLD_MASK_WDT_WDOG_GPIO_RST_EN()                      (FLD_MASK(1, 1))
    #define  FLD_MWD_WDT_WDOG_GPIO_RST_EN(v)                      (FLD_MWD(1, 1, v))
    #define  FLD_MRD_WDT_WDOG_GPIO_RST_EN(v)                      (FLD_MRD(1, 1, v))
    #define  SET_WDT_WDOG_GPIO_RST_EN(v)                          OP_FLD_WR(REG_WDT_WDOG_RST_CFG, 1, 1, v)
    #define  GET_WDT_WDOG_GPIO_RST_EN()                           OP_FLD_RD(REG_WDT_WDOG_RST_CFG, 1, 1)
    #define  RST_WDT_WDOG_GPIO_RST_EN()                           OP_FLD_WR(REG_WDT_WDOG_RST_CFG, 1, 1, 0x0)

    //Field: WDT_WDOG_POR_RST_EN
    #define  FLD_LSB_WDT_WDOG_POR_RST_EN()                        (2)
    #define  FLD_MSB_WDT_WDOG_POR_RST_EN()                        (2)
    #define  FLD_MASK_WDT_WDOG_POR_RST_EN()                       (FLD_MASK(2, 2))
    #define  FLD_MWD_WDT_WDOG_POR_RST_EN(v)                       (FLD_MWD(2, 2, v))
    #define  FLD_MRD_WDT_WDOG_POR_RST_EN(v)                       (FLD_MRD(2, 2, v))
    #define  SET_WDT_WDOG_POR_RST_EN(v)                           OP_FLD_WR(REG_WDT_WDOG_RST_CFG, 2, 2, v)
    #define  GET_WDT_WDOG_POR_RST_EN()                            OP_FLD_RD(REG_WDT_WDOG_RST_CFG, 2, 2)
    #define  RST_WDT_WDOG_POR_RST_EN()                            OP_FLD_WR(REG_WDT_WDOG_RST_CFG, 2, 2, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_WDT_WDOG_RST_CFG(WDOG_GLB_RST_EN,WDOG_GPIO_RST_EN,WDOG_POR_RST_EN) \
                (WR_WDT_WDOG_RST_CFG( \
                  (FLD_MWD_WDT_WDOG_GLB_RST_EN(WDOG_GLB_RST_EN))                       | \
                  (FLD_MWD_WDT_WDOG_GPIO_RST_EN(WDOG_GPIO_RST_EN))                     | \
                  (FLD_MWD_WDT_WDOG_POR_RST_EN(WDOG_POR_RST_EN))                         \
                ))


#define  REG_WDT_REG_BUS_CLK_CFG                                  (REG_BASE_WDT + 0x14)
    //Read/Write-Register Using Address
    #define  RD_WDT_REG_BUS_CLK_CFG()                             (REG32(REG_WDT_REG_BUS_CLK_CFG))
    #define  WR_WDT_REG_BUS_CLK_CFG(v)                            (REG32(REG_WDT_REG_BUS_CLK_CFG) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_WDT_REG_BUS_CLK_CFG()                      (0x1)  
    #define  REG_WMASK_WDT_REG_BUS_CLK_CFG()                      (0x1)

    //Field: WDT_REG_BUS_CLK_GATE_MODE
    #define  FLD_LSB_WDT_REG_BUS_CLK_GATE_MODE()                  (0)
    #define  FLD_MSB_WDT_REG_BUS_CLK_GATE_MODE()                  (0)
    #define  FLD_MASK_WDT_REG_BUS_CLK_GATE_MODE()                 (FLD_MASK(0, 0))
    #define  FLD_MWD_WDT_REG_BUS_CLK_GATE_MODE(v)                 (FLD_MWD(0, 0, v))
    #define  FLD_MRD_WDT_REG_BUS_CLK_GATE_MODE(v)                 (FLD_MRD(0, 0, v))
    #define  SET_WDT_REG_BUS_CLK_GATE_MODE(v)                     OP_FLD_WR_EXC(REG_WDT_REG_BUS_CLK_CFG, 0, 0, v)
    #define  GET_WDT_REG_BUS_CLK_GATE_MODE()                      OP_FLD_RD(REG_WDT_REG_BUS_CLK_CFG, 0, 0)
    #define  RST_WDT_REG_BUS_CLK_GATE_MODE()                      OP_FLD_WR_EXC(REG_WDT_REG_BUS_CLK_CFG, 0, 0, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_WDT_REG_BUS_CLK_CFG(REG_BUS_CLK_GATE_MODE) \
                (WR_WDT_REG_BUS_CLK_CFG( \
                  (FLD_MWD_WDT_REG_BUS_CLK_GATE_MODE(REG_BUS_CLK_GATE_MODE))             \
                ))



#endif /*__LIGHTELF_WDT_REG_H__*/
// vim:ft=c:nowrap:noma
