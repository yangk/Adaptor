/*
 * Copyright (c) 2006-2015 Triductor Technology, Inc.
 *           All Rights Reserved Worldwide
 *
 * Filename: lightelf_uart_reg.h
 * Author  : $Author: Eric $
 * Date    : Jun/01/2015
 * Version : $Revision: 550 $
 * Purpose : Describe all the available registers for UART of LIGHTELF.
             This file is automatically generated by Register Parser.
 */

#ifndef __LIGHTELF_UART_REG_H__
#define __LIGHTELF_UART_REG_H__

#ifndef REG32
    #define REG32(x)                    (*(volatile unsigned int *)(x))
#endif

#ifndef _REG_FLD_OP_
    #define _REG_FLD_OP_

    // Register Field Mask
    #define FLD_MASK(s,e)              ((0xffffffff >> (31-(e)+(s))) << (s))

    // Register Field Mask Write-Data
    // s -- Start of Bit  e -- End   of Bit
    // v -- Value
    #define FLD_MWD(s,e,v)              (((v) << (s)) & FLD_MASK((s),(e)))

    // Register Field Mask Read-Data
    // s -- Start of Bit  e -- End   of Bit
    // v -- Value
    #define FLD_MRD(s,e,v)              (((v) & FLD_MASK((s),(e))) >> (s))

    // Register Field Write operation
    // a -- Address   s -- Start of Bit
    // v -- Value     e -- End   of Bit
    #define OP_FLD_WR(a,s,e,v)          (REG32((a)) = (((v) << (s)) & FLD_MASK((s),(e))) | (REG32((a)) & ~FLD_MASK((s),(e))))
    #define OP_FLD_WR_EXC(a,s,e,v)      (REG32((a)) = (((v) << (s)) & FLD_MASK((s),(e))))

    // Register Field Read operation
    #define OP_FLD_RD(a,s,e)            ((REG32((a)) & FLD_MASK((s),(e))) >> (s))

#endif

//Address Offset for multi-instance mode only
#ifndef  REG_OFFSET_UART
    #define  REG_OFFSET_UART  (0x100000)
#endif

// Base address
#ifndef REG_BASE_UART
    #define  REG_BASE_UART(idx)    (0xf2500000 + idx * REG_OFFSET_UART)
#endif



//------------------------------------
// Basic Registers
//------------------------------------
#define  REG_UART_BUFR(idx)                                       (REG_BASE_UART(idx) + 0x000)
    //Read/Write-Register Using Address
    #define  RD_UART_BUFR(idx)                                    (REG32(REG_UART_BUFR(idx)))
    #define  WR_UART_BUFR(v, idx)                                 (REG32(REG_UART_BUFR(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_BUFR()                                (0xFF)  
    #define  REG_WMASK_UART_BUFR()                                (0xFF)

    //Field: UART_FIFO
    #define  FLD_LSB_UART_FIFO()                                  (0)
    #define  FLD_MSB_UART_FIFO()                                  (7)
    #define  FLD_MASK_UART_FIFO()                                 (FLD_MASK(0, 7))
    #define  FLD_MWD_UART_FIFO(v)                                 (FLD_MWD(0, 7, v))
    #define  FLD_MRD_UART_FIFO(v)                                 (FLD_MRD(0, 7, v))
    #define  SET_UART_FIFO(v, idx)                                OP_FLD_WR_EXC(REG_UART_BUFR(idx), 0, 7, v)
    #define  GET_UART_FIFO(idx)                                   OP_FLD_RD(REG_UART_BUFR(idx), 0, 7)
    #define  RST_UART_FIFO(idx)                                   OP_FLD_WR_EXC(REG_UART_BUFR(idx), 0, 7, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_UART_BUFR(FIFO,idx) \
                (WR_UART_BUFR( \
                  (FLD_MWD_UART_FIFO(FIFO))                                              \
                 ,idx \
                ))


#define  REG_UART_IER(idx)                                        (REG_BASE_UART(idx) + 0x004)
    //Read/Write-Register Using Address
    #define  RD_UART_IER(idx)                                     (REG32(REG_UART_IER(idx)))
    #define  WR_UART_IER(v, idx)                                  (REG32(REG_UART_IER(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_IER()                                 (0x7F)  
    #define  REG_WMASK_UART_IER()                                 (0x7F)

    //Field: UART_IE_RDA
    #define  FLD_LSB_UART_IE_RDA()                                (0)
    #define  FLD_MSB_UART_IE_RDA()                                (0)
    #define  FLD_MASK_UART_IE_RDA()                               (FLD_MASK(0, 0))
    #define  FLD_MWD_UART_IE_RDA(v)                               (FLD_MWD(0, 0, v))
    #define  FLD_MRD_UART_IE_RDA(v)                               (FLD_MRD(0, 0, v))
    #define  SET_UART_IE_RDA(v, idx)                              OP_FLD_WR(REG_UART_IER(idx), 0, 0, v)
    #define  GET_UART_IE_RDA(idx)                                 OP_FLD_RD(REG_UART_IER(idx), 0, 0)
    #define  RST_UART_IE_RDA(idx)                                 OP_FLD_WR(REG_UART_IER(idx), 0, 0, 0x0)

    //Field: UART_IE_THRE
    #define  FLD_LSB_UART_IE_THRE()                               (1)
    #define  FLD_MSB_UART_IE_THRE()                               (1)
    #define  FLD_MASK_UART_IE_THRE()                              (FLD_MASK(1, 1))
    #define  FLD_MWD_UART_IE_THRE(v)                              (FLD_MWD(1, 1, v))
    #define  FLD_MRD_UART_IE_THRE(v)                              (FLD_MRD(1, 1, v))
    #define  SET_UART_IE_THRE(v, idx)                             OP_FLD_WR(REG_UART_IER(idx), 1, 1, v)
    #define  GET_UART_IE_THRE(idx)                                OP_FLD_RD(REG_UART_IER(idx), 1, 1)
    #define  RST_UART_IE_THRE(idx)                                OP_FLD_WR(REG_UART_IER(idx), 1, 1, 0x0)

    //Field: UART_IE_RLS
    #define  FLD_LSB_UART_IE_RLS()                                (2)
    #define  FLD_MSB_UART_IE_RLS()                                (2)
    #define  FLD_MASK_UART_IE_RLS()                               (FLD_MASK(2, 2))
    #define  FLD_MWD_UART_IE_RLS(v)                               (FLD_MWD(2, 2, v))
    #define  FLD_MRD_UART_IE_RLS(v)                               (FLD_MRD(2, 2, v))
    #define  SET_UART_IE_RLS(v, idx)                              OP_FLD_WR(REG_UART_IER(idx), 2, 2, v)
    #define  GET_UART_IE_RLS(idx)                                 OP_FLD_RD(REG_UART_IER(idx), 2, 2)
    #define  RST_UART_IE_RLS(idx)                                 OP_FLD_WR(REG_UART_IER(idx), 2, 2, 0x0)

    //Field: UART_IE_MS
    #define  FLD_LSB_UART_IE_MS()                                 (3)
    #define  FLD_MSB_UART_IE_MS()                                 (3)
    #define  FLD_MASK_UART_IE_MS()                                (FLD_MASK(3, 3))
    #define  FLD_MWD_UART_IE_MS(v)                                (FLD_MWD(3, 3, v))
    #define  FLD_MRD_UART_IE_MS(v)                                (FLD_MRD(3, 3, v))
    #define  SET_UART_IE_MS(v, idx)                               OP_FLD_WR(REG_UART_IER(idx), 3, 3, v)
    #define  GET_UART_IE_MS(idx)                                  OP_FLD_RD(REG_UART_IER(idx), 3, 3)
    #define  RST_UART_IE_MS(idx)                                  OP_FLD_WR(REG_UART_IER(idx), 3, 3, 0x0)

    //Field: UART_IE_RTO
    #define  FLD_LSB_UART_IE_RTO()                                (4)
    #define  FLD_MSB_UART_IE_RTO()                                (4)
    #define  FLD_MASK_UART_IE_RTO()                               (FLD_MASK(4, 4))
    #define  FLD_MWD_UART_IE_RTO(v)                               (FLD_MWD(4, 4, v))
    #define  FLD_MRD_UART_IE_RTO(v)                               (FLD_MRD(4, 4, v))
    #define  SET_UART_IE_RTO(v, idx)                              OP_FLD_WR(REG_UART_IER(idx), 4, 4, v)
    #define  GET_UART_IE_RTO(idx)                                 OP_FLD_RD(REG_UART_IER(idx), 4, 4)
    #define  RST_UART_IE_RTO(idx)                                 OP_FLD_WR(REG_UART_IER(idx), 4, 4, 0x0)

    //Field: UART_IE_RTI
    #define  FLD_LSB_UART_IE_RTI()                                (5)
    #define  FLD_MSB_UART_IE_RTI()                                (5)
    #define  FLD_MASK_UART_IE_RTI()                               (FLD_MASK(5, 5))
    #define  FLD_MWD_UART_IE_RTI(v)                               (FLD_MWD(5, 5, v))
    #define  FLD_MRD_UART_IE_RTI(v)                               (FLD_MRD(5, 5, v))
    #define  SET_UART_IE_RTI(v, idx)                              OP_FLD_WR(REG_UART_IER(idx), 5, 5, v)
    #define  GET_UART_IE_RTI(idx)                                 OP_FLD_RD(REG_UART_IER(idx), 5, 5)
    #define  RST_UART_IE_RTI(idx)                                 OP_FLD_WR(REG_UART_IER(idx), 5, 5, 0x0)

    //Field: UART_IE_TWM
    #define  FLD_LSB_UART_IE_TWM()                                (6)
    #define  FLD_MSB_UART_IE_TWM()                                (6)
    #define  FLD_MASK_UART_IE_TWM()                               (FLD_MASK(6, 6))
    #define  FLD_MWD_UART_IE_TWM(v)                               (FLD_MWD(6, 6, v))
    #define  FLD_MRD_UART_IE_TWM(v)                               (FLD_MRD(6, 6, v))
    #define  SET_UART_IE_TWM(v, idx)                              OP_FLD_WR(REG_UART_IER(idx), 6, 6, v)
    #define  GET_UART_IE_TWM(idx)                                 OP_FLD_RD(REG_UART_IER(idx), 6, 6)
    #define  RST_UART_IE_TWM(idx)                                 OP_FLD_WR(REG_UART_IER(idx), 6, 6, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_UART_IER(IE_RDA,IE_THRE,IE_RLS,IE_MS,IE_RTO,IE_RTI,IE_TWM,idx) \
                (WR_UART_IER( \
                  (FLD_MWD_UART_IE_RDA(IE_RDA))                                        | \
                  (FLD_MWD_UART_IE_THRE(IE_THRE))                                      | \
                  (FLD_MWD_UART_IE_RLS(IE_RLS))                                        | \
                  (FLD_MWD_UART_IE_MS(IE_MS))                                          | \
                  (FLD_MWD_UART_IE_RTO(IE_RTO))                                        | \
                  (FLD_MWD_UART_IE_RTI(IE_RTI))                                        | \
                  (FLD_MWD_UART_IE_TWM(IE_TWM))                                          \
                 ,idx \
                ))


#define  REG_UART_IIFCR(idx)                                      (REG_BASE_UART(idx) + 0x008)
    //Read/Write-Register Using Address
    #define  RD_UART_IIFCR(idx)                                   (REG32(REG_UART_IIFCR(idx)))
    #define  WR_UART_IIFCR(v, idx)                                (REG32(REG_UART_IIFCR(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_IIFCR()                               (0xFFFFFFFF)  
    #define  REG_WMASK_UART_IIFCR()                               (0xFFFFFFFF)

    //Field: UART_IIFC
    #define  FLD_LSB_UART_IIFC()                                  (0)
    #define  FLD_MSB_UART_IIFC()                                  (7)
    #define  FLD_MASK_UART_IIFC()                                 (FLD_MASK(0, 7))
    #define  FLD_MWD_UART_IIFC(v)                                 (FLD_MWD(0, 7, v))
    #define  FLD_MRD_UART_IIFC(v)                                 (FLD_MRD(0, 7, v))
    #define  SET_UART_IIFC(v, idx)                                OP_FLD_WR(REG_UART_IIFCR(idx), 0, 7, v)
    #define  GET_UART_IIFC(idx)                                   OP_FLD_RD(REG_UART_IIFCR(idx), 0, 7)
    #define  RST_UART_IIFC(idx)                                   OP_FLD_WR(REG_UART_IIFCR(idx), 0, 7, 0xe0)

    //Field: UART_ITWM
    #define  FLD_LSB_UART_ITWM()                                  (8)
    #define  FLD_MSB_UART_ITWM()                                  (15)
    #define  FLD_MASK_UART_ITWM()                                 (FLD_MASK(8, 15))
    #define  FLD_MWD_UART_ITWM(v)                                 (FLD_MWD(8, 15, v))
    #define  FLD_MRD_UART_ITWM(v)                                 (FLD_MRD(8, 15, v))
    #define  SET_UART_ITWM(v, idx)                                OP_FLD_WR(REG_UART_IIFCR(idx), 8, 15, v)
    #define  GET_UART_ITWM(idx)                                   OP_FLD_RD(REG_UART_IIFCR(idx), 8, 15)
    #define  RST_UART_ITWM(idx)                                   OP_FLD_WR(REG_UART_IIFCR(idx), 8, 15, 0x10)

    //Field: UART_IIFT
    #define  FLD_LSB_UART_IIFT()                                  (16)
    #define  FLD_MSB_UART_IIFT()                                  (31)
    #define  FLD_MASK_UART_IIFT()                                 (FLD_MASK(16, 31))
    #define  FLD_MWD_UART_IIFT(v)                                 (FLD_MWD(16, 31, v))
    #define  FLD_MRD_UART_IIFT(v)                                 (FLD_MRD(16, 31, v))
    #define  SET_UART_IIFT(v, idx)                                OP_FLD_WR(REG_UART_IIFCR(idx), 16, 31, v)
    #define  GET_UART_IIFT(idx)                                   OP_FLD_RD(REG_UART_IIFCR(idx), 16, 31)
    #define  RST_UART_IIFT(idx)                                   OP_FLD_WR(REG_UART_IIFCR(idx), 16, 31, 0x3ff)

    //Write-Register Using Field-Name
    #define  WRF_UART_IIFCR(IIFC,ITWM,IIFT,idx) \
                (WR_UART_IIFCR( \
                  (FLD_MWD_UART_IIFC(IIFC))                                            | \
                  (FLD_MWD_UART_ITWM(ITWM))                                            | \
                  (FLD_MWD_UART_IIFT(IIFT))                                              \
                 ,idx \
                ))


#define  REG_UART_LCR(idx)                                        (REG_BASE_UART(idx) + 0x00c)
    //Read/Write-Register Using Address
    #define  RD_UART_LCR(idx)                                     (REG32(REG_UART_LCR(idx)))
    #define  WR_UART_LCR(v, idx)                                  (REG32(REG_UART_LCR(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_LCR()                                 (0xFF)  
    #define  REG_WMASK_UART_LCR()                                 (0xFF)

    //Field: UART_LC_BITS
    #define  FLD_LSB_UART_LC_BITS()                               (0)
    #define  FLD_MSB_UART_LC_BITS()                               (1)
    #define  FLD_MASK_UART_LC_BITS()                              (FLD_MASK(0, 1))
    #define  FLD_MWD_UART_LC_BITS(v)                              (FLD_MWD(0, 1, v))
    #define  FLD_MRD_UART_LC_BITS(v)                              (FLD_MRD(0, 1, v))
    #define  SET_UART_LC_BITS(v, idx)                             OP_FLD_WR(REG_UART_LCR(idx), 0, 1, v)
    #define  GET_UART_LC_BITS(idx)                                OP_FLD_RD(REG_UART_LCR(idx), 0, 1)
    #define  RST_UART_LC_BITS(idx)                                OP_FLD_WR(REG_UART_LCR(idx), 0, 1, 0x3)

    //Field: UART_LC_SB
    #define  FLD_LSB_UART_LC_SB()                                 (2)
    #define  FLD_MSB_UART_LC_SB()                                 (2)
    #define  FLD_MASK_UART_LC_SB()                                (FLD_MASK(2, 2))
    #define  FLD_MWD_UART_LC_SB(v)                                (FLD_MWD(2, 2, v))
    #define  FLD_MRD_UART_LC_SB(v)                                (FLD_MRD(2, 2, v))
    #define  SET_UART_LC_SB(v, idx)                               OP_FLD_WR(REG_UART_LCR(idx), 2, 2, v)
    #define  GET_UART_LC_SB(idx)                                  OP_FLD_RD(REG_UART_LCR(idx), 2, 2)
    #define  RST_UART_LC_SB(idx)                                  OP_FLD_WR(REG_UART_LCR(idx), 2, 2, 0x0)

    //Field: UART_LC_PE
    #define  FLD_LSB_UART_LC_PE()                                 (3)
    #define  FLD_MSB_UART_LC_PE()                                 (3)
    #define  FLD_MASK_UART_LC_PE()                                (FLD_MASK(3, 3))
    #define  FLD_MWD_UART_LC_PE(v)                                (FLD_MWD(3, 3, v))
    #define  FLD_MRD_UART_LC_PE(v)                                (FLD_MRD(3, 3, v))
    #define  SET_UART_LC_PE(v, idx)                               OP_FLD_WR(REG_UART_LCR(idx), 3, 3, v)
    #define  GET_UART_LC_PE(idx)                                  OP_FLD_RD(REG_UART_LCR(idx), 3, 3)
    #define  RST_UART_LC_PE(idx)                                  OP_FLD_WR(REG_UART_LCR(idx), 3, 3, 0x0)

    //Field: UART_LC_EP
    #define  FLD_LSB_UART_LC_EP()                                 (4)
    #define  FLD_MSB_UART_LC_EP()                                 (4)
    #define  FLD_MASK_UART_LC_EP()                                (FLD_MASK(4, 4))
    #define  FLD_MWD_UART_LC_EP(v)                                (FLD_MWD(4, 4, v))
    #define  FLD_MRD_UART_LC_EP(v)                                (FLD_MRD(4, 4, v))
    #define  SET_UART_LC_EP(v, idx)                               OP_FLD_WR(REG_UART_LCR(idx), 4, 4, v)
    #define  GET_UART_LC_EP(idx)                                  OP_FLD_RD(REG_UART_LCR(idx), 4, 4)
    #define  RST_UART_LC_EP(idx)                                  OP_FLD_WR(REG_UART_LCR(idx), 4, 4, 0x0)

    //Field: UART_LC_SP
    #define  FLD_LSB_UART_LC_SP()                                 (5)
    #define  FLD_MSB_UART_LC_SP()                                 (5)
    #define  FLD_MASK_UART_LC_SP()                                (FLD_MASK(5, 5))
    #define  FLD_MWD_UART_LC_SP(v)                                (FLD_MWD(5, 5, v))
    #define  FLD_MRD_UART_LC_SP(v)                                (FLD_MRD(5, 5, v))
    #define  SET_UART_LC_SP(v, idx)                               OP_FLD_WR(REG_UART_LCR(idx), 5, 5, v)
    #define  GET_UART_LC_SP(idx)                                  OP_FLD_RD(REG_UART_LCR(idx), 5, 5)
    #define  RST_UART_LC_SP(idx)                                  OP_FLD_WR(REG_UART_LCR(idx), 5, 5, 0x0)

    //Field: UART_LC_BC
    #define  FLD_LSB_UART_LC_BC()                                 (6)
    #define  FLD_MSB_UART_LC_BC()                                 (6)
    #define  FLD_MASK_UART_LC_BC()                                (FLD_MASK(6, 6))
    #define  FLD_MWD_UART_LC_BC(v)                                (FLD_MWD(6, 6, v))
    #define  FLD_MRD_UART_LC_BC(v)                                (FLD_MRD(6, 6, v))
    #define  SET_UART_LC_BC(v, idx)                               OP_FLD_WR(REG_UART_LCR(idx), 6, 6, v)
    #define  GET_UART_LC_BC(idx)                                  OP_FLD_RD(REG_UART_LCR(idx), 6, 6)
    #define  RST_UART_LC_BC(idx)                                  OP_FLD_WR(REG_UART_LCR(idx), 6, 6, 0x0)

    //Field: UART_LC_DL
    #define  FLD_LSB_UART_LC_DL()                                 (7)
    #define  FLD_MSB_UART_LC_DL()                                 (7)
    #define  FLD_MASK_UART_LC_DL()                                (FLD_MASK(7, 7))
    #define  FLD_MWD_UART_LC_DL(v)                                (FLD_MWD(7, 7, v))
    #define  FLD_MRD_UART_LC_DL(v)                                (FLD_MRD(7, 7, v))
    #define  SET_UART_LC_DL(v, idx)                               OP_FLD_WR(REG_UART_LCR(idx), 7, 7, v)
    #define  GET_UART_LC_DL(idx)                                  OP_FLD_RD(REG_UART_LCR(idx), 7, 7)
    #define  RST_UART_LC_DL(idx)                                  OP_FLD_WR(REG_UART_LCR(idx), 7, 7, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_UART_LCR(LC_BITS,LC_SB,LC_PE,LC_EP,LC_SP,LC_BC,LC_DL,idx) \
                (WR_UART_LCR( \
                  (FLD_MWD_UART_LC_BITS(LC_BITS))                                      | \
                  (FLD_MWD_UART_LC_SB(LC_SB))                                          | \
                  (FLD_MWD_UART_LC_PE(LC_PE))                                          | \
                  (FLD_MWD_UART_LC_EP(LC_EP))                                          | \
                  (FLD_MWD_UART_LC_SP(LC_SP))                                          | \
                  (FLD_MWD_UART_LC_BC(LC_BC))                                          | \
                  (FLD_MWD_UART_LC_DL(LC_DL))                                            \
                 ,idx \
                ))


#define  REG_UART_LSR(idx)                                        (REG_BASE_UART(idx) + 0x014)
    //Read/Write-Register Using Address
    #define  RD_UART_LSR(idx)                                     (REG32(REG_UART_LSR(idx)))
    #define  WR_UART_LSR(v, idx)                                  (REG32(REG_UART_LSR(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_LSR()                                 (0xFFFF03FF)  
    #define  REG_WMASK_UART_LSR()                                 (0x0)

    //Field: UART_LS_DR
    #define  FLD_LSB_UART_LS_DR()                                 (0)
    #define  FLD_MSB_UART_LS_DR()                                 (0)
    #define  FLD_MASK_UART_LS_DR()                                (FLD_MASK(0, 0))
    #define  FLD_MWD_UART_LS_DR(v)                                (FLD_MWD(0, 0, v))
    #define  FLD_MRD_UART_LS_DR(v)                                (FLD_MRD(0, 0, v))
    #define  GET_UART_LS_DR(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 0, 0)

    //Field: UART_LS_OE
    #define  FLD_LSB_UART_LS_OE()                                 (1)
    #define  FLD_MSB_UART_LS_OE()                                 (1)
    #define  FLD_MASK_UART_LS_OE()                                (FLD_MASK(1, 1))
    #define  FLD_MWD_UART_LS_OE(v)                                (FLD_MWD(1, 1, v))
    #define  FLD_MRD_UART_LS_OE(v)                                (FLD_MRD(1, 1, v))
    #define  GET_UART_LS_OE(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 1, 1)
    #define  RST_UART_LS_OE(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 1, 1)

    //Field: UART_LS_PE
    #define  FLD_LSB_UART_LS_PE()                                 (2)
    #define  FLD_MSB_UART_LS_PE()                                 (2)
    #define  FLD_MASK_UART_LS_PE()                                (FLD_MASK(2, 2))
    #define  FLD_MWD_UART_LS_PE(v)                                (FLD_MWD(2, 2, v))
    #define  FLD_MRD_UART_LS_PE(v)                                (FLD_MRD(2, 2, v))
    #define  GET_UART_LS_PE(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 2, 2)
    #define  RST_UART_LS_PE(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 2, 2)

    //Field: UART_LS_FE
    #define  FLD_LSB_UART_LS_FE()                                 (3)
    #define  FLD_MSB_UART_LS_FE()                                 (3)
    #define  FLD_MASK_UART_LS_FE()                                (FLD_MASK(3, 3))
    #define  FLD_MWD_UART_LS_FE(v)                                (FLD_MWD(3, 3, v))
    #define  FLD_MRD_UART_LS_FE(v)                                (FLD_MRD(3, 3, v))
    #define  GET_UART_LS_FE(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 3, 3)
    #define  RST_UART_LS_FE(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 3, 3)

    //Field: UART_LS_BI
    #define  FLD_LSB_UART_LS_BI()                                 (4)
    #define  FLD_MSB_UART_LS_BI()                                 (4)
    #define  FLD_MASK_UART_LS_BI()                                (FLD_MASK(4, 4))
    #define  FLD_MWD_UART_LS_BI(v)                                (FLD_MWD(4, 4, v))
    #define  FLD_MRD_UART_LS_BI(v)                                (FLD_MRD(4, 4, v))
    #define  GET_UART_LS_BI(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 4, 4)
    #define  RST_UART_LS_BI(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 4, 4)

    //Field: UART_LS_TFE
    #define  FLD_LSB_UART_LS_TFE()                                (5)
    #define  FLD_MSB_UART_LS_TFE()                                (5)
    #define  FLD_MASK_UART_LS_TFE()                               (FLD_MASK(5, 5))
    #define  FLD_MWD_UART_LS_TFE(v)                               (FLD_MWD(5, 5, v))
    #define  FLD_MRD_UART_LS_TFE(v)                               (FLD_MRD(5, 5, v))
    #define  GET_UART_LS_TFE(idx)                                 OP_FLD_RD(REG_UART_LSR(idx), 5, 5)

    //Field: UART_LS_TE
    #define  FLD_LSB_UART_LS_TE()                                 (6)
    #define  FLD_MSB_UART_LS_TE()                                 (6)
    #define  FLD_MASK_UART_LS_TE()                                (FLD_MASK(6, 6))
    #define  FLD_MWD_UART_LS_TE(v)                                (FLD_MWD(6, 6, v))
    #define  FLD_MRD_UART_LS_TE(v)                                (FLD_MRD(6, 6, v))
    #define  GET_UART_LS_TE(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 6, 6)

    //Field: UART_LS_EI
    #define  FLD_LSB_UART_LS_EI()                                 (7)
    #define  FLD_MSB_UART_LS_EI()                                 (7)
    #define  FLD_MASK_UART_LS_EI()                                (FLD_MASK(7, 7))
    #define  FLD_MWD_UART_LS_EI(v)                                (FLD_MWD(7, 7, v))
    #define  FLD_MRD_UART_LS_EI(v)                                (FLD_MRD(7, 7, v))
    #define  GET_UART_LS_EI(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 7, 7)
    #define  RST_UART_LS_EI(idx)                                  OP_FLD_RD(REG_UART_LSR(idx), 7, 7)

    //Field: UART_LS_RTO
    #define  FLD_LSB_UART_LS_RTO()                                (8)
    #define  FLD_MSB_UART_LS_RTO()                                (8)
    #define  FLD_MASK_UART_LS_RTO()                               (FLD_MASK(8, 8))
    #define  FLD_MWD_UART_LS_RTO(v)                               (FLD_MWD(8, 8, v))
    #define  FLD_MRD_UART_LS_RTO(v)                               (FLD_MRD(8, 8, v))
    #define  GET_UART_LS_RTO(idx)                                 OP_FLD_RD(REG_UART_LSR(idx), 8, 8)
    #define  RST_UART_LS_RTO(idx)                                 OP_FLD_RD(REG_UART_LSR(idx), 8, 8)

    //Field: UART_LS_TWM
    #define  FLD_LSB_UART_LS_TWM()                                (9)
    #define  FLD_MSB_UART_LS_TWM()                                (9)
    #define  FLD_MASK_UART_LS_TWM()                               (FLD_MASK(9, 9))
    #define  FLD_MWD_UART_LS_TWM(v)                               (FLD_MWD(9, 9, v))
    #define  FLD_MRD_UART_LS_TWM(v)                               (FLD_MRD(9, 9, v))
    #define  GET_UART_LS_TWM(idx)                                 OP_FLD_RD(REG_UART_LSR(idx), 9, 9)
    #define  RST_UART_LS_TWM(idx)                                 OP_FLD_RD(REG_UART_LSR(idx), 9, 9)

    //Field: UART_LS_RFTO
    #define  FLD_LSB_UART_LS_RFTO()                               (16)
    #define  FLD_MSB_UART_LS_RFTO()                               (31)
    #define  FLD_MASK_UART_LS_RFTO()                              (FLD_MASK(16, 31))
    #define  FLD_MWD_UART_LS_RFTO(v)                              (FLD_MWD(16, 31, v))
    #define  FLD_MRD_UART_LS_RFTO(v)                              (FLD_MRD(16, 31, v))
    #define  GET_UART_LS_RFTO(idx)                                OP_FLD_RD(REG_UART_LSR(idx), 16, 31)

    //Write-Register Using Field-Name
    #define  WRF_UART_LSR(LS_DR,LS_OE,LS_PE,LS_FE,LS_BI,LS_TFE,LS_TE,LS_EI,LS_RTO,LS_TWM,LS_RFTO,idx) \
                (WR_UART_LSR( \
   \
                 ,idx \
                ))


#define  REG_UART_SR(idx)                                         (REG_BASE_UART(idx) + 0x01c)
    //Read/Write-Register Using Address
    #define  RD_UART_SR(idx)                                      (REG32(REG_UART_SR(idx)))
    #define  WR_UART_SR(v, idx)                                   (REG32(REG_UART_SR(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_SR()                                  (0xFF)  
    #define  REG_WMASK_UART_SR()                                  (0xFF)

    //Field: UART_SCR
    #define  FLD_LSB_UART_SCR()                                   (0)
    #define  FLD_MSB_UART_SCR()                                   (7)
    #define  FLD_MASK_UART_SCR()                                  (FLD_MASK(0, 7))
    #define  FLD_MWD_UART_SCR(v)                                  (FLD_MWD(0, 7, v))
    #define  FLD_MRD_UART_SCR(v)                                  (FLD_MRD(0, 7, v))
    #define  SET_UART_SCR(v, idx)                                 OP_FLD_WR_EXC(REG_UART_SR(idx), 0, 7, v)
    #define  GET_UART_SCR(idx)                                    OP_FLD_RD(REG_UART_SR(idx), 0, 7)
    #define  RST_UART_SCR(idx)                                    OP_FLD_WR_EXC(REG_UART_SR(idx), 0, 7, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_UART_SR(SCR,idx) \
                (WR_UART_SR( \
                  (FLD_MWD_UART_SCR(SCR))                                                \
                 ,idx \
                ))


#define  REG_UART_TF_CNT(idx)                                     (REG_BASE_UART(idx) + 0x3c0)
    //Read/Write-Register Using Address
    #define  RD_UART_TF_CNT(idx)                                  (REG32(REG_UART_TF_CNT(idx)))
    #define  WR_UART_TF_CNT(v, idx)                               (REG32(REG_UART_TF_CNT(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_TF_CNT()                              (0x1FF)  
    #define  REG_WMASK_UART_TF_CNT()                              (0x1FF)

    //Field: UART_T_CNT
    #define  FLD_LSB_UART_T_CNT()                                 (0)
    #define  FLD_MSB_UART_T_CNT()                                 (8)
    #define  FLD_MASK_UART_T_CNT()                                (FLD_MASK(0, 8))
    #define  FLD_MWD_UART_T_CNT(v)                                (FLD_MWD(0, 8, v))
    #define  FLD_MRD_UART_T_CNT(v)                                (FLD_MRD(0, 8, v))
    #define  SET_UART_T_CNT(v, idx)                               OP_FLD_WR_EXC(REG_UART_TF_CNT(idx), 0, 8, v)
    #define  GET_UART_T_CNT(idx)                                  OP_FLD_RD(REG_UART_TF_CNT(idx), 0, 8)
    #define  RST_UART_T_CNT(idx)                                  OP_FLD_WR_EXC(REG_UART_TF_CNT(idx), 0, 8, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_UART_TF_CNT(T_CNT,idx) \
                (WR_UART_TF_CNT( \
                  (FLD_MWD_UART_T_CNT(T_CNT))                                            \
                 ,idx \
                ))


#define  REG_UART_RF_CNT(idx)                                     (REG_BASE_UART(idx) + 0x3c4)
    //Read/Write-Register Using Address
    #define  RD_UART_RF_CNT(idx)                                  (REG32(REG_UART_RF_CNT(idx)))
    #define  WR_UART_RF_CNT(v, idx)                               (REG32(REG_UART_RF_CNT(idx)) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_UART_RF_CNT()                              (0x1FF)  
    #define  REG_WMASK_UART_RF_CNT()                              (0x1FF)

    //Field: UART_R_CNT
    #define  FLD_LSB_UART_R_CNT()                                 (0)
    #define  FLD_MSB_UART_R_CNT()                                 (8)
    #define  FLD_MASK_UART_R_CNT()                                (FLD_MASK(0, 8))
    #define  FLD_MWD_UART_R_CNT(v)                                (FLD_MWD(0, 8, v))
    #define  FLD_MRD_UART_R_CNT(v)                                (FLD_MRD(0, 8, v))
    #define  SET_UART_R_CNT(v, idx)                               OP_FLD_WR_EXC(REG_UART_RF_CNT(idx), 0, 8, v)
    #define  GET_UART_R_CNT(idx)                                  OP_FLD_RD(REG_UART_RF_CNT(idx), 0, 8)
    #define  RST_UART_R_CNT(idx)                                  OP_FLD_WR_EXC(REG_UART_RF_CNT(idx), 0, 8, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_UART_RF_CNT(R_CNT,idx) \
                (WR_UART_RF_CNT( \
                  (FLD_MWD_UART_R_CNT(R_CNT))                                            \
                 ,idx \
                ))



#endif /*__LIGHTELF_UART_REG_H__*/
// vim:ft=c:nowrap:noma
