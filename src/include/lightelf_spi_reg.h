/*
 * Copyright (c) 2006-2015 Triductor Technology, Inc.
 *           All Rights Reserved Worldwide
 *
 * Filename: lightelf_spi_reg.h
 * Author  : $Author: Eric $
 * Date    : Jun/01/2015
 * Version : $Revision: 1001 $
 * Purpose : Describe all the available registers for SPI of LIGHTELF.
             This file is automatically generated by Register Parser.
 */

#ifndef __LIGHTELF_SPI_REG_H__
#define __LIGHTELF_SPI_REG_H__

#ifndef REG32
    #define REG32(x)                    (*(volatile unsigned int *)(x))
#endif

#ifndef _REG_FLD_OP_
    #define _REG_FLD_OP_

    // Register Field Mask
    #define FLD_MASK(s,e)              ((0xffffffff >> (31-(e)+(s))) << (s))

    // Register Field Mask Write-Data
    // s -- Start of Bit  e -- End   of Bit
    // v -- Value
    #define FLD_MWD(s,e,v)              (((v) << (s)) & FLD_MASK((s),(e)))

    // Register Field Mask Read-Data
    // s -- Start of Bit  e -- End   of Bit
    // v -- Value
    #define FLD_MRD(s,e,v)              (((v) & FLD_MASK((s),(e))) >> (s))

    // Register Field Write operation
    // a -- Address   s -- Start of Bit
    // v -- Value     e -- End   of Bit
    #define OP_FLD_WR(a,s,e,v)          (REG32((a)) = (((v) << (s)) & FLD_MASK((s),(e))) | (REG32((a)) & ~FLD_MASK((s),(e))))
    #define OP_FLD_WR_EXC(a,s,e,v)      (REG32((a)) = (((v) << (s)) & FLD_MASK((s),(e))))

    // Register Field Read operation
    #define OP_FLD_RD(a,s,e)            ((REG32((a)) & FLD_MASK((s),(e))) >> (s))

#endif

//Address Offset for multi-instance mode only
#ifndef  REG_OFFSET_SPI
    #define  REG_OFFSET_SPI  (0x0)
#endif

// Base address
#ifndef REG_BASE_SPI
    #define  REG_BASE_SPI    (0xf2000000)
#endif



//------------------------------------
// Interrupt Registers
//------------------------------------
#define  REG_SPI_INTR_EN                                          (REG_BASE_SPI + 0x00)
    //Read/Write-Register Using Address
    #define  RD_SPI_INTR_EN()                                     (REG32(REG_SPI_INTR_EN))
    #define  WR_SPI_INTR_EN(v)                                    (REG32(REG_SPI_INTR_EN) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_INTR_EN()                              (0x1)  
    #define  REG_WMASK_SPI_INTR_EN()                              (0x1)

    //Field: SPI_SPI_INTR_EN
    #define  FLD_LSB_SPI_SPI_INTR_EN()                            (0)
    #define  FLD_MSB_SPI_SPI_INTR_EN()                            (0)
    #define  FLD_MASK_SPI_SPI_INTR_EN()                           (FLD_MASK(0, 0))
    #define  FLD_MWD_SPI_SPI_INTR_EN(v)                           (FLD_MWD(0, 0, v))
    #define  FLD_MRD_SPI_SPI_INTR_EN(v)                           (FLD_MRD(0, 0, v))
    #define  SET_SPI_SPI_INTR_EN(v)                               OP_FLD_WR_EXC(REG_SPI_INTR_EN, 0, 0, v)
    #define  GET_SPI_SPI_INTR_EN()                                OP_FLD_RD(REG_SPI_INTR_EN, 0, 0)
    #define  RST_SPI_SPI_INTR_EN()                                OP_FLD_WR_EXC(REG_SPI_INTR_EN, 0, 0, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_SPI_INTR_EN(SPI_INTR_EN) \
                (WR_SPI_INTR_EN( \
                  (FLD_MWD_SPI_SPI_INTR_EN(SPI_INTR_EN))                                 \
                ))


#define  REG_SPI_INTR_STA                                         (REG_BASE_SPI + 0x04)
    //Read/Write-Register Using Address
    #define  RD_SPI_INTR_STA()                                    (REG32(REG_SPI_INTR_STA))
    #define  WR_SPI_INTR_STA(v)                                   (REG32(REG_SPI_INTR_STA) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_INTR_STA()                             (0x1)  
    #define  REG_WMASK_SPI_INTR_STA()                             (0x0)

    //Field: SPI_SPI_BUSY
    #define  FLD_LSB_SPI_SPI_BUSY()                               (0)
    #define  FLD_MSB_SPI_SPI_BUSY()                               (0)
    #define  FLD_MASK_SPI_SPI_BUSY()                              (FLD_MASK(0, 0))
    #define  FLD_MWD_SPI_SPI_BUSY(v)                              (FLD_MWD(0, 0, v))
    #define  FLD_MRD_SPI_SPI_BUSY(v)                              (FLD_MRD(0, 0, v))
    #define  GET_SPI_SPI_BUSY()                                   OP_FLD_RD(REG_SPI_INTR_STA, 0, 0)

    //Write-Register Using Field-Name
    #define  WRF_SPI_INTR_STA(SPI_BUSY) \
                (WR_SPI_INTR_STA( \
   \
                ))


//------------------------------------
// Configure Registers
//------------------------------------
#define  REG_SPI_MODE                                             (REG_BASE_SPI + 0x10)
    //Read/Write-Register Using Address
    #define  RD_SPI_MODE()                                        (REG32(REG_SPI_MODE))
    #define  WR_SPI_MODE(v)                                       (REG32(REG_SPI_MODE) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_MODE()                                 (0x117)  
    #define  REG_WMASK_SPI_MODE()                                 (0x117)

    //Field: SPI_SPI_ENABLE
    #define  FLD_LSB_SPI_SPI_ENABLE()                             (0)
    #define  FLD_MSB_SPI_SPI_ENABLE()                             (0)
    #define  FLD_MASK_SPI_SPI_ENABLE()                            (FLD_MASK(0, 0))
    #define  FLD_MWD_SPI_SPI_ENABLE(v)                            (FLD_MWD(0, 0, v))
    #define  FLD_MRD_SPI_SPI_ENABLE(v)                            (FLD_MRD(0, 0, v))
    #define  SET_SPI_SPI_ENABLE(v)                                OP_FLD_WR(REG_SPI_MODE, 0, 0, v)
    #define  GET_SPI_SPI_ENABLE()                                 OP_FLD_RD(REG_SPI_MODE, 0, 0)
    #define  RST_SPI_SPI_ENABLE()                                 OP_FLD_WR(REG_SPI_MODE, 0, 0, 0x1)

    //Field: SPI_SPI_CPOL
    #define  FLD_LSB_SPI_SPI_CPOL()                               (1)
    #define  FLD_MSB_SPI_SPI_CPOL()                               (1)
    #define  FLD_MASK_SPI_SPI_CPOL()                              (FLD_MASK(1, 1))
    #define  FLD_MWD_SPI_SPI_CPOL(v)                              (FLD_MWD(1, 1, v))
    #define  FLD_MRD_SPI_SPI_CPOL(v)                              (FLD_MRD(1, 1, v))
    #define  SET_SPI_SPI_CPOL(v)                                  OP_FLD_WR(REG_SPI_MODE, 1, 1, v)
    #define  GET_SPI_SPI_CPOL()                                   OP_FLD_RD(REG_SPI_MODE, 1, 1)
    #define  RST_SPI_SPI_CPOL()                                   OP_FLD_WR(REG_SPI_MODE, 1, 1, 0x0)

    //Field: SPI_SPI_CPHA
    #define  FLD_LSB_SPI_SPI_CPHA()                               (2)
    #define  FLD_MSB_SPI_SPI_CPHA()                               (2)
    #define  FLD_MASK_SPI_SPI_CPHA()                              (FLD_MASK(2, 2))
    #define  FLD_MWD_SPI_SPI_CPHA(v)                              (FLD_MWD(2, 2, v))
    #define  FLD_MRD_SPI_SPI_CPHA(v)                              (FLD_MRD(2, 2, v))
    #define  SET_SPI_SPI_CPHA(v)                                  OP_FLD_WR(REG_SPI_MODE, 2, 2, v)
    #define  GET_SPI_SPI_CPHA()                                   OP_FLD_RD(REG_SPI_MODE, 2, 2)
    #define  RST_SPI_SPI_CPHA()                                   OP_FLD_WR(REG_SPI_MODE, 2, 2, 0x0)

    //Field: SPI_SPI_SPC0
    #define  FLD_LSB_SPI_SPI_SPC0()                               (4)
    #define  FLD_MSB_SPI_SPI_SPC0()                               (4)
    #define  FLD_MASK_SPI_SPI_SPC0()                              (FLD_MASK(4, 4))
    #define  FLD_MWD_SPI_SPI_SPC0(v)                              (FLD_MWD(4, 4, v))
    #define  FLD_MRD_SPI_SPI_SPC0(v)                              (FLD_MRD(4, 4, v))
    #define  SET_SPI_SPI_SPC0(v)                                  OP_FLD_WR(REG_SPI_MODE, 4, 4, v)
    #define  GET_SPI_SPI_SPC0()                                   OP_FLD_RD(REG_SPI_MODE, 4, 4)
    #define  RST_SPI_SPI_SPC0()                                   OP_FLD_WR(REG_SPI_MODE, 4, 4, 0x0)

    //Field: SPI_SPI_BOOT_EN
    #define  FLD_LSB_SPI_SPI_BOOT_EN()                            (8)
    #define  FLD_MSB_SPI_SPI_BOOT_EN()                            (8)
    #define  FLD_MASK_SPI_SPI_BOOT_EN()                           (FLD_MASK(8, 8))
    #define  FLD_MWD_SPI_SPI_BOOT_EN(v)                           (FLD_MWD(8, 8, v))
    #define  FLD_MRD_SPI_SPI_BOOT_EN(v)                           (FLD_MRD(8, 8, v))
    #define  SET_SPI_SPI_BOOT_EN(v)                               OP_FLD_WR(REG_SPI_MODE, 8, 8, v)
    #define  GET_SPI_SPI_BOOT_EN()                                OP_FLD_RD(REG_SPI_MODE, 8, 8)
    #define  RST_SPI_SPI_BOOT_EN()                                OP_FLD_WR(REG_SPI_MODE, 8, 8, 0x1)

    //Write-Register Using Field-Name
    #define  WRF_SPI_MODE(SPI_ENABLE,SPI_CPOL,SPI_CPHA,SPI_SPC0,SPI_BOOT_EN) \
                (WR_SPI_MODE( \
                  (FLD_MWD_SPI_SPI_ENABLE(SPI_ENABLE))                                 | \
                  (FLD_MWD_SPI_SPI_CPOL(SPI_CPOL))                                     | \
                  (FLD_MWD_SPI_SPI_CPHA(SPI_CPHA))                                     | \
                  (FLD_MWD_SPI_SPI_SPC0(SPI_SPC0))                                     | \
                  (FLD_MWD_SPI_SPI_BOOT_EN(SPI_BOOT_EN))                                 \
                ))


#define  REG_SPI_SCK_CFG                                          (REG_BASE_SPI + 0x14)
    //Read/Write-Register Using Address
    #define  RD_SPI_SCK_CFG()                                     (REG32(REG_SPI_SCK_CFG))
    #define  WR_SPI_SCK_CFG(v)                                    (REG32(REG_SPI_SCK_CFG) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_SCK_CFG()                              (0xFFFF)  
    #define  REG_WMASK_SPI_SCK_CFG()                              (0xFFFF)

    //Field: SPI_SPI_SCK_HIGH_PERIOD
    #define  FLD_LSB_SPI_SPI_SCK_HIGH_PERIOD()                    (0)
    #define  FLD_MSB_SPI_SPI_SCK_HIGH_PERIOD()                    (7)
    #define  FLD_MASK_SPI_SPI_SCK_HIGH_PERIOD()                   (FLD_MASK(0, 7))
    #define  FLD_MWD_SPI_SPI_SCK_HIGH_PERIOD(v)                   (FLD_MWD(0, 7, v))
    #define  FLD_MRD_SPI_SPI_SCK_HIGH_PERIOD(v)                   (FLD_MRD(0, 7, v))
    #define  SET_SPI_SPI_SCK_HIGH_PERIOD(v)                       OP_FLD_WR(REG_SPI_SCK_CFG, 0, 7, v)
    #define  GET_SPI_SPI_SCK_HIGH_PERIOD()                        OP_FLD_RD(REG_SPI_SCK_CFG, 0, 7)
    #define  RST_SPI_SPI_SCK_HIGH_PERIOD()                        OP_FLD_WR(REG_SPI_SCK_CFG, 0, 7, 0x1f)

    //Field: SPI_SPI_SCK_LOW_PERIOD
    #define  FLD_LSB_SPI_SPI_SCK_LOW_PERIOD()                     (8)
    #define  FLD_MSB_SPI_SPI_SCK_LOW_PERIOD()                     (15)
    #define  FLD_MASK_SPI_SPI_SCK_LOW_PERIOD()                    (FLD_MASK(8, 15))
    #define  FLD_MWD_SPI_SPI_SCK_LOW_PERIOD(v)                    (FLD_MWD(8, 15, v))
    #define  FLD_MRD_SPI_SPI_SCK_LOW_PERIOD(v)                    (FLD_MRD(8, 15, v))
    #define  SET_SPI_SPI_SCK_LOW_PERIOD(v)                        OP_FLD_WR(REG_SPI_SCK_CFG, 8, 15, v)
    #define  GET_SPI_SPI_SCK_LOW_PERIOD()                         OP_FLD_RD(REG_SPI_SCK_CFG, 8, 15)
    #define  RST_SPI_SPI_SCK_LOW_PERIOD()                         OP_FLD_WR(REG_SPI_SCK_CFG, 8, 15, 0x1f)

    //Write-Register Using Field-Name
    #define  WRF_SPI_SCK_CFG(SPI_SCK_HIGH_PERIOD,SPI_SCK_LOW_PERIOD) \
                (WR_SPI_SCK_CFG( \
                  (FLD_MWD_SPI_SPI_SCK_HIGH_PERIOD(SPI_SCK_HIGH_PERIOD))               | \
                  (FLD_MWD_SPI_SPI_SCK_LOW_PERIOD(SPI_SCK_LOW_PERIOD))                   \
                ))


#define  REG_SPI_CSS                                              (REG_BASE_SPI + 0x18)
    //Read/Write-Register Using Address
    #define  RD_SPI_CSS()                                         (REG32(REG_SPI_CSS))
    #define  WR_SPI_CSS(v)                                        (REG32(REG_SPI_CSS) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_CSS()                                  (0xFF01330F)  
    #define  REG_WMASK_SPI_CSS()                                  (0xFF01330F)

    //Field: SPI_SPI_CSS_EN
    #define  FLD_LSB_SPI_SPI_CSS_EN()                             (0)
    #define  FLD_MSB_SPI_SPI_CSS_EN()                             (3)
    #define  FLD_MASK_SPI_SPI_CSS_EN()                            (FLD_MASK(0, 3))
    #define  FLD_MWD_SPI_SPI_CSS_EN(v)                            (FLD_MWD(0, 3, v))
    #define  FLD_MRD_SPI_SPI_CSS_EN(v)                            (FLD_MRD(0, 3, v))
    #define  SET_SPI_SPI_CSS_EN(v)                                OP_FLD_WR(REG_SPI_CSS, 0, 3, v)
    #define  GET_SPI_SPI_CSS_EN()                                 OP_FLD_RD(REG_SPI_CSS, 0, 3)
    #define  RST_SPI_SPI_CSS_EN()                                 OP_FLD_WR(REG_SPI_CSS, 0, 3, 0x1)

    //Field: SPI_SPI_CFG_CSS_EN
    #define  FLD_LSB_SPI_SPI_CFG_CSS_EN()                         (8)
    #define  FLD_MSB_SPI_SPI_CFG_CSS_EN()                         (8)
    #define  FLD_MASK_SPI_SPI_CFG_CSS_EN()                        (FLD_MASK(8, 8))
    #define  FLD_MWD_SPI_SPI_CFG_CSS_EN(v)                        (FLD_MWD(8, 8, v))
    #define  FLD_MRD_SPI_SPI_CFG_CSS_EN(v)                        (FLD_MRD(8, 8, v))
    #define  SET_SPI_SPI_CFG_CSS_EN(v)                            OP_FLD_WR(REG_SPI_CSS, 8, 8, v)
    #define  GET_SPI_SPI_CFG_CSS_EN()                             OP_FLD_RD(REG_SPI_CSS, 8, 8)
    #define  RST_SPI_SPI_CFG_CSS_EN()                             OP_FLD_WR(REG_SPI_CSS, 8, 8, 0x0)

    //Field: SPI_SPI_CFG_CSS
    #define  FLD_LSB_SPI_SPI_CFG_CSS()                            (9)
    #define  FLD_MSB_SPI_SPI_CFG_CSS()                            (9)
    #define  FLD_MASK_SPI_SPI_CFG_CSS()                           (FLD_MASK(9, 9))
    #define  FLD_MWD_SPI_SPI_CFG_CSS(v)                           (FLD_MWD(9, 9, v))
    #define  FLD_MRD_SPI_SPI_CFG_CSS(v)                           (FLD_MRD(9, 9, v))
    #define  SET_SPI_SPI_CFG_CSS(v)                               OP_FLD_WR(REG_SPI_CSS, 9, 9, v)
    #define  GET_SPI_SPI_CFG_CSS()                                OP_FLD_RD(REG_SPI_CSS, 9, 9)
    #define  RST_SPI_SPI_CFG_CSS()                                OP_FLD_WR(REG_SPI_CSS, 9, 9, 0x0)

    //Field: SPI_SPI_MIMO
    #define  FLD_LSB_SPI_SPI_MIMO()                               (12)
    #define  FLD_MSB_SPI_SPI_MIMO()                               (12)
    #define  FLD_MASK_SPI_SPI_MIMO()                              (FLD_MASK(12, 12))
    #define  FLD_MWD_SPI_SPI_MIMO(v)                              (FLD_MWD(12, 12, v))
    #define  FLD_MRD_SPI_SPI_MIMO(v)                              (FLD_MRD(12, 12, v))
    #define  SET_SPI_SPI_MIMO(v)                                  OP_FLD_WR(REG_SPI_CSS, 12, 12, v)
    #define  GET_SPI_SPI_MIMO()                                   OP_FLD_RD(REG_SPI_CSS, 12, 12)
    #define  RST_SPI_SPI_MIMO()                                   OP_FLD_WR(REG_SPI_CSS, 12, 12, 0x0)

    //Field: SPI_SPI_CFG_MIMO
    #define  FLD_LSB_SPI_SPI_CFG_MIMO()                           (13)
    #define  FLD_MSB_SPI_SPI_CFG_MIMO()                           (13)
    #define  FLD_MASK_SPI_SPI_CFG_MIMO()                          (FLD_MASK(13, 13))
    #define  FLD_MWD_SPI_SPI_CFG_MIMO(v)                          (FLD_MWD(13, 13, v))
    #define  FLD_MRD_SPI_SPI_CFG_MIMO(v)                          (FLD_MRD(13, 13, v))
    #define  SET_SPI_SPI_CFG_MIMO(v)                              OP_FLD_WR(REG_SPI_CSS, 13, 13, v)
    #define  GET_SPI_SPI_CFG_MIMO()                               OP_FLD_RD(REG_SPI_CSS, 13, 13)
    #define  RST_SPI_SPI_CFG_MIMO()                               OP_FLD_WR(REG_SPI_CSS, 13, 13, 0x0)

    //Field: SPI_SPI_CSS_STOP
    #define  FLD_LSB_SPI_SPI_CSS_STOP()                           (16)
    #define  FLD_MSB_SPI_SPI_CSS_STOP()                           (16)
    #define  FLD_MASK_SPI_SPI_CSS_STOP()                          (FLD_MASK(16, 16))
    #define  FLD_MWD_SPI_SPI_CSS_STOP(v)                          (FLD_MWD(16, 16, v))
    #define  FLD_MRD_SPI_SPI_CSS_STOP(v)                          (FLD_MRD(16, 16, v))
    #define  SET_SPI_SPI_CSS_STOP(v)                              OP_FLD_WR(REG_SPI_CSS, 16, 16, v)
    #define  GET_SPI_SPI_CSS_STOP()                               OP_FLD_RD(REG_SPI_CSS, 16, 16)
    #define  RST_SPI_SPI_CSS_STOP()                               OP_FLD_WR(REG_SPI_CSS, 16, 16, 0x1)

    //Field: SPI_SPI_CSS_HCYC
    #define  FLD_LSB_SPI_SPI_CSS_HCYC()                           (24)
    #define  FLD_MSB_SPI_SPI_CSS_HCYC()                           (31)
    #define  FLD_MASK_SPI_SPI_CSS_HCYC()                          (FLD_MASK(24, 31))
    #define  FLD_MWD_SPI_SPI_CSS_HCYC(v)                          (FLD_MWD(24, 31, v))
    #define  FLD_MRD_SPI_SPI_CSS_HCYC(v)                          (FLD_MRD(24, 31, v))
    #define  SET_SPI_SPI_CSS_HCYC(v)                              OP_FLD_WR(REG_SPI_CSS, 24, 31, v)
    #define  GET_SPI_SPI_CSS_HCYC()                               OP_FLD_RD(REG_SPI_CSS, 24, 31)
    #define  RST_SPI_SPI_CSS_HCYC()                               OP_FLD_WR(REG_SPI_CSS, 24, 31, 0x3f)

    //Write-Register Using Field-Name
    #define  WRF_SPI_CSS(SPI_CSS_EN,SPI_CFG_CSS_EN,SPI_CFG_CSS,SPI_MIMO,SPI_CFG_MIMO,SPI_CSS_STOP,SPI_CSS_HCYC) \
                (WR_SPI_CSS( \
                  (FLD_MWD_SPI_SPI_CSS_EN(SPI_CSS_EN))                                 | \
                  (FLD_MWD_SPI_SPI_CFG_CSS_EN(SPI_CFG_CSS_EN))                         | \
                  (FLD_MWD_SPI_SPI_CFG_CSS(SPI_CFG_CSS))                               | \
                  (FLD_MWD_SPI_SPI_MIMO(SPI_MIMO))                                     | \
                  (FLD_MWD_SPI_SPI_CFG_MIMO(SPI_CFG_MIMO))                             | \
                  (FLD_MWD_SPI_SPI_CSS_STOP(SPI_CSS_STOP))                             | \
                  (FLD_MWD_SPI_SPI_CSS_HCYC(SPI_CSS_HCYC))                               \
                ))


#define  REG_SPI_REG_BUS_CLK_CFG                                  (REG_BASE_SPI + 0x1c)
    //Read/Write-Register Using Address
    #define  RD_SPI_REG_BUS_CLK_CFG()                             (REG32(REG_SPI_REG_BUS_CLK_CFG))
    #define  WR_SPI_REG_BUS_CLK_CFG(v)                            (REG32(REG_SPI_REG_BUS_CLK_CFG) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_REG_BUS_CLK_CFG()                      (0x1)  
    #define  REG_WMASK_SPI_REG_BUS_CLK_CFG()                      (0x1)

    //Field: SPI_REG_BUS_CLK_GATE_MODE
    #define  FLD_LSB_SPI_REG_BUS_CLK_GATE_MODE()                  (0)
    #define  FLD_MSB_SPI_REG_BUS_CLK_GATE_MODE()                  (0)
    #define  FLD_MASK_SPI_REG_BUS_CLK_GATE_MODE()                 (FLD_MASK(0, 0))
    #define  FLD_MWD_SPI_REG_BUS_CLK_GATE_MODE(v)                 (FLD_MWD(0, 0, v))
    #define  FLD_MRD_SPI_REG_BUS_CLK_GATE_MODE(v)                 (FLD_MRD(0, 0, v))
    #define  SET_SPI_REG_BUS_CLK_GATE_MODE(v)                     OP_FLD_WR_EXC(REG_SPI_REG_BUS_CLK_CFG, 0, 0, v)
    #define  GET_SPI_REG_BUS_CLK_GATE_MODE()                      OP_FLD_RD(REG_SPI_REG_BUS_CLK_CFG, 0, 0)
    #define  RST_SPI_REG_BUS_CLK_GATE_MODE()                      OP_FLD_WR_EXC(REG_SPI_REG_BUS_CLK_CFG, 0, 0, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_SPI_REG_BUS_CLK_CFG(REG_BUS_CLK_GATE_MODE) \
                (WR_SPI_REG_BUS_CLK_CFG( \
                  (FLD_MWD_SPI_REG_BUS_CLK_GATE_MODE(REG_BUS_CLK_GATE_MODE))             \
                ))


//------------------------------------
// Transmission Registers
//------------------------------------
#define  REG_SPI_WDATA_BNUM                                       (REG_BASE_SPI + 0x20)
    //Read/Write-Register Using Address
    #define  RD_SPI_WDATA_BNUM()                                  (REG32(REG_SPI_WDATA_BNUM))
    #define  WR_SPI_WDATA_BNUM(v)                                 (REG32(REG_SPI_WDATA_BNUM) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_WDATA_BNUM()                           (0x103)  
    #define  REG_WMASK_SPI_WDATA_BNUM()                           (0x103)

    //Field: SPI_SPI_WDATA_BNUM
    #define  FLD_LSB_SPI_SPI_WDATA_BNUM()                         (0)
    #define  FLD_MSB_SPI_SPI_WDATA_BNUM()                         (1)
    #define  FLD_MASK_SPI_SPI_WDATA_BNUM()                        (FLD_MASK(0, 1))
    #define  FLD_MWD_SPI_SPI_WDATA_BNUM(v)                        (FLD_MWD(0, 1, v))
    #define  FLD_MRD_SPI_SPI_WDATA_BNUM(v)                        (FLD_MRD(0, 1, v))
    #define  SET_SPI_SPI_WDATA_BNUM(v)                            OP_FLD_WR(REG_SPI_WDATA_BNUM, 0, 1, v)
    #define  GET_SPI_SPI_WDATA_BNUM()                             OP_FLD_RD(REG_SPI_WDATA_BNUM, 0, 1)
    #define  RST_SPI_SPI_WDATA_BNUM()                             OP_FLD_WR(REG_SPI_WDATA_BNUM, 0, 1, 0x0)

    //Field: SPI_SPI_WDATA_MSB
    #define  FLD_LSB_SPI_SPI_WDATA_MSB()                          (8)
    #define  FLD_MSB_SPI_SPI_WDATA_MSB()                          (8)
    #define  FLD_MASK_SPI_SPI_WDATA_MSB()                         (FLD_MASK(8, 8))
    #define  FLD_MWD_SPI_SPI_WDATA_MSB(v)                         (FLD_MWD(8, 8, v))
    #define  FLD_MRD_SPI_SPI_WDATA_MSB(v)                         (FLD_MRD(8, 8, v))
    #define  SET_SPI_SPI_WDATA_MSB(v)                             OP_FLD_WR(REG_SPI_WDATA_BNUM, 8, 8, v)
    #define  GET_SPI_SPI_WDATA_MSB()                              OP_FLD_RD(REG_SPI_WDATA_BNUM, 8, 8)
    #define  RST_SPI_SPI_WDATA_MSB()                              OP_FLD_WR(REG_SPI_WDATA_BNUM, 8, 8, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_SPI_WDATA_BNUM(SPI_WDATA_BNUM,SPI_WDATA_MSB) \
                (WR_SPI_WDATA_BNUM( \
                  (FLD_MWD_SPI_SPI_WDATA_BNUM(SPI_WDATA_BNUM))                         | \
                  (FLD_MWD_SPI_SPI_WDATA_MSB(SPI_WDATA_MSB))                             \
                ))


#define  REG_SPI_WDATA                                            (REG_BASE_SPI + 0x24)
    //Read/Write-Register Using Address
    #define  RD_SPI_WDATA()                                       (REG32(REG_SPI_WDATA))
    #define  WR_SPI_WDATA(v)                                      (REG32(REG_SPI_WDATA) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_WDATA()                                (0xFFFFFFFF)  
    #define  REG_WMASK_SPI_WDATA()                                (0xFFFFFFFF)

    //Field: SPI_SPI_WDATA
    #define  FLD_LSB_SPI_SPI_WDATA()                              (0)
    #define  FLD_MSB_SPI_SPI_WDATA()                              (31)
    #define  FLD_MASK_SPI_SPI_WDATA()                             (FLD_MASK(0, 31))
    #define  FLD_MWD_SPI_SPI_WDATA(v)                             (FLD_MWD(0, 31, v))
    #define  FLD_MRD_SPI_SPI_WDATA(v)                             (FLD_MRD(0, 31, v))
    #define  SET_SPI_SPI_WDATA(v)                                 OP_FLD_WR_EXC(REG_SPI_WDATA, 0, 31, v)
    #define  GET_SPI_SPI_WDATA()                                  OP_FLD_RD(REG_SPI_WDATA, 0, 31)
    #define  RST_SPI_SPI_WDATA()                                  OP_FLD_WR_EXC(REG_SPI_WDATA, 0, 31, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_SPI_WDATA(SPI_WDATA) \
                (WR_SPI_WDATA( \
                  (FLD_MWD_SPI_SPI_WDATA(SPI_WDATA))                                     \
                ))


#define  REG_SPI_DFT_WDATA                                        (REG_BASE_SPI + 0x28)
    //Read/Write-Register Using Address
    #define  RD_SPI_DFT_WDATA()                                   (REG32(REG_SPI_DFT_WDATA))
    #define  WR_SPI_DFT_WDATA(v)                                  (REG32(REG_SPI_DFT_WDATA) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_DFT_WDATA()                            (0xFFFFFFFF)  
    #define  REG_WMASK_SPI_DFT_WDATA()                            (0xFFFFFFFF)

    //Field: SPI_SPI_DFT_WDATA
    #define  FLD_LSB_SPI_SPI_DFT_WDATA()                          (0)
    #define  FLD_MSB_SPI_SPI_DFT_WDATA()                          (31)
    #define  FLD_MASK_SPI_SPI_DFT_WDATA()                         (FLD_MASK(0, 31))
    #define  FLD_MWD_SPI_SPI_DFT_WDATA(v)                         (FLD_MWD(0, 31, v))
    #define  FLD_MRD_SPI_SPI_DFT_WDATA(v)                         (FLD_MRD(0, 31, v))
    #define  SET_SPI_SPI_DFT_WDATA(v)                             OP_FLD_WR_EXC(REG_SPI_DFT_WDATA, 0, 31, v)
    #define  GET_SPI_SPI_DFT_WDATA()                              OP_FLD_RD(REG_SPI_DFT_WDATA, 0, 31)
    #define  RST_SPI_SPI_DFT_WDATA()                              OP_FLD_WR_EXC(REG_SPI_DFT_WDATA, 0, 31, 0x0)

    //Write-Register Using Field-Name
    #define  WRF_SPI_DFT_WDATA(SPI_DFT_WDATA) \
                (WR_SPI_DFT_WDATA( \
                  (FLD_MWD_SPI_SPI_DFT_WDATA(SPI_DFT_WDATA))                             \
                ))


#define  REG_SPI_RDATA                                            (REG_BASE_SPI + 0x2c)
    //Read/Write-Register Using Address
    #define  RD_SPI_RDATA()                                       (REG32(REG_SPI_RDATA))
    #define  WR_SPI_RDATA(v)                                      (REG32(REG_SPI_RDATA) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_RDATA()                                (0xFFFFFFFF)  
    #define  REG_WMASK_SPI_RDATA()                                (0x0)

    //Field: SPI_SPI_RDATA
    #define  FLD_LSB_SPI_SPI_RDATA()                              (0)
    #define  FLD_MSB_SPI_SPI_RDATA()                              (31)
    #define  FLD_MASK_SPI_SPI_RDATA()                             (FLD_MASK(0, 31))
    #define  FLD_MWD_SPI_SPI_RDATA(v)                             (FLD_MWD(0, 31, v))
    #define  FLD_MRD_SPI_SPI_RDATA(v)                             (FLD_MRD(0, 31, v))
    #define  GET_SPI_SPI_RDATA()                                  OP_FLD_RD(REG_SPI_RDATA, 0, 31)

    //Write-Register Using Field-Name
    #define  WRF_SPI_RDATA(SPI_RDATA) \
                (WR_SPI_RDATA( \
   \
                ))


//------------------------------------
// Debug Registers
//------------------------------------
#define  REG_SPI_DEBUG_LOST_TRAN_CNT                              (REG_BASE_SPI + 0x40)
    //Read/Write-Register Using Address
    #define  RD_SPI_DEBUG_LOST_TRAN_CNT()                         (REG32(REG_SPI_DEBUG_LOST_TRAN_CNT))
    #define  WR_SPI_DEBUG_LOST_TRAN_CNT(v)                        (REG32(REG_SPI_DEBUG_LOST_TRAN_CNT) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_DEBUG_LOST_TRAN_CNT()                  (0xFF)  
    #define  REG_WMASK_SPI_DEBUG_LOST_TRAN_CNT()                  (0xFF)

    //Field: SPI_SPI_LOST_TRAN_CNT
    #define  FLD_LSB_SPI_SPI_LOST_TRAN_CNT()                      (0)
    #define  FLD_MSB_SPI_SPI_LOST_TRAN_CNT()                      (7)
    #define  FLD_MASK_SPI_SPI_LOST_TRAN_CNT()                     (FLD_MASK(0, 7))
    #define  FLD_MWD_SPI_SPI_LOST_TRAN_CNT(v)                     (FLD_MWD(0, 7, v))
    #define  FLD_MRD_SPI_SPI_LOST_TRAN_CNT(v)                     (FLD_MRD(0, 7, v))
    #define  SET_SPI_SPI_LOST_TRAN_CNT(v)                         OP_FLD_WR_EXC(REG_SPI_DEBUG_LOST_TRAN_CNT, 0, 7, v)
    #define  GET_SPI_SPI_LOST_TRAN_CNT()                          OP_FLD_RD(REG_SPI_DEBUG_LOST_TRAN_CNT, 0, 7)
    #define  CLR_SPI_SPI_LOST_TRAN_CNT()                          OP_FLD_WR_EXC(REG_SPI_DEBUG_LOST_TRAN_CNT, 0, 7, 0x1)
    #define  RST_SPI_SPI_LOST_TRAN_CNT()                          OP_FLD_WR_EXC(REG_SPI_DEBUG_LOST_TRAN_CNT, 0, 7, 0x1)

    //Write-Register Using Field-Name
    #define  WRF_SPI_DEBUG_LOST_TRAN_CNT(SPI_LOST_TRAN_CNT) \
                (WR_SPI_DEBUG_LOST_TRAN_CNT( \
                  (FLD_MWD_SPI_SPI_LOST_TRAN_CNT(SPI_LOST_TRAN_CNT))                     \
                ))


#define  REG_SPI_DEBUG_AHB_INF                                    (REG_BASE_SPI + 0x44)
    //Read/Write-Register Using Address
    #define  RD_SPI_DEBUG_AHB_INF()                               (REG32(REG_SPI_DEBUG_AHB_INF))
    #define  WR_SPI_DEBUG_AHB_INF(v)                              (REG32(REG_SPI_DEBUG_AHB_INF) = v)

    //Register Read/Write-Mask
    #define  REG_RMASK_SPI_DEBUG_AHB_INF()                        (0x1FF)  
    #define  REG_WMASK_SPI_DEBUG_AHB_INF()                        (0x180)

    //Field: SPI_SPI_AHB_FSM
    #define  FLD_LSB_SPI_SPI_AHB_FSM()                            (0)
    #define  FLD_MSB_SPI_SPI_AHB_FSM()                            (4)
    #define  FLD_MASK_SPI_SPI_AHB_FSM()                           (FLD_MASK(0, 4))
    #define  FLD_MWD_SPI_SPI_AHB_FSM(v)                           (FLD_MWD(0, 4, v))
    #define  FLD_MRD_SPI_SPI_AHB_FSM(v)                           (FLD_MRD(0, 4, v))
    #define  GET_SPI_SPI_AHB_FSM()                                OP_FLD_RD(REG_SPI_DEBUG_AHB_INF, 0, 4)

    //Field: SPI_SPI_AHB_BUF_REMPTY
    #define  FLD_LSB_SPI_SPI_AHB_BUF_REMPTY()                     (5)
    #define  FLD_MSB_SPI_SPI_AHB_BUF_REMPTY()                     (5)
    #define  FLD_MASK_SPI_SPI_AHB_BUF_REMPTY()                    (FLD_MASK(5, 5))
    #define  FLD_MWD_SPI_SPI_AHB_BUF_REMPTY(v)                    (FLD_MWD(5, 5, v))
    #define  FLD_MRD_SPI_SPI_AHB_BUF_REMPTY(v)                    (FLD_MRD(5, 5, v))
    #define  GET_SPI_SPI_AHB_BUF_REMPTY()                         OP_FLD_RD(REG_SPI_DEBUG_AHB_INF, 5, 5)

    //Field: SPI_SPI_AHB_BUF_WFULL
    #define  FLD_LSB_SPI_SPI_AHB_BUF_WFULL()                      (6)
    #define  FLD_MSB_SPI_SPI_AHB_BUF_WFULL()                      (6)
    #define  FLD_MASK_SPI_SPI_AHB_BUF_WFULL()                     (FLD_MASK(6, 6))
    #define  FLD_MWD_SPI_SPI_AHB_BUF_WFULL(v)                     (FLD_MWD(6, 6, v))
    #define  FLD_MRD_SPI_SPI_AHB_BUF_WFULL(v)                     (FLD_MRD(6, 6, v))
    #define  GET_SPI_SPI_AHB_BUF_WFULL()                          OP_FLD_RD(REG_SPI_DEBUG_AHB_INF, 6, 6)

    //Field: SPI_SPI_AHB_BUF_WERR
    #define  FLD_LSB_SPI_SPI_AHB_BUF_WERR()                       (7)
    #define  FLD_MSB_SPI_SPI_AHB_BUF_WERR()                       (7)
    #define  FLD_MASK_SPI_SPI_AHB_BUF_WERR()                      (FLD_MASK(7, 7))
    #define  FLD_MWD_SPI_SPI_AHB_BUF_WERR(v)                      (FLD_MWD(7, 7, v))
    #define  FLD_MRD_SPI_SPI_AHB_BUF_WERR(v)                      (FLD_MRD(7, 7, v))
    #define  SET_SPI_SPI_AHB_BUF_WERR(v)                          OP_FLD_WR(REG_SPI_DEBUG_AHB_INF, 7, 7, v)
    #define  GET_SPI_SPI_AHB_BUF_WERR()                           OP_FLD_RD(REG_SPI_DEBUG_AHB_INF, 7, 7)
    #define  CLR_SPI_SPI_AHB_BUF_WERR()                           OP_FLD_WR(REG_SPI_DEBUG_AHB_INF, 7, 7, 1)
    #define  RST_SPI_SPI_AHB_BUF_WERR()                           OP_FLD_WR(REG_SPI_DEBUG_AHB_INF, 7, 7, 0x1)

    //Field: SPI_SPI_AHB_BUF_RERR
    #define  FLD_LSB_SPI_SPI_AHB_BUF_RERR()                       (8)
    #define  FLD_MSB_SPI_SPI_AHB_BUF_RERR()                       (8)
    #define  FLD_MASK_SPI_SPI_AHB_BUF_RERR()                      (FLD_MASK(8, 8))
    #define  FLD_MWD_SPI_SPI_AHB_BUF_RERR(v)                      (FLD_MWD(8, 8, v))
    #define  FLD_MRD_SPI_SPI_AHB_BUF_RERR(v)                      (FLD_MRD(8, 8, v))
    #define  SET_SPI_SPI_AHB_BUF_RERR(v)                          OP_FLD_WR(REG_SPI_DEBUG_AHB_INF, 8, 8, v)
    #define  GET_SPI_SPI_AHB_BUF_RERR()                           OP_FLD_RD(REG_SPI_DEBUG_AHB_INF, 8, 8)
    #define  CLR_SPI_SPI_AHB_BUF_RERR()                           OP_FLD_WR(REG_SPI_DEBUG_AHB_INF, 8, 8, 1)
    #define  RST_SPI_SPI_AHB_BUF_RERR()                           OP_FLD_WR(REG_SPI_DEBUG_AHB_INF, 8, 8, 0x1)

    //Write-Register Using Field-Name
    #define  WRF_SPI_DEBUG_AHB_INF(SPI_AHB_FSM,SPI_AHB_BUF_REMPTY,SPI_AHB_BUF_WFULL,SPI_AHB_BUF_WERR,SPI_AHB_BUF_RERR) \
                (WR_SPI_DEBUG_AHB_INF( \
                  (FLD_MWD_SPI_SPI_AHB_BUF_WERR(SPI_AHB_BUF_WERR))                     | \
                  (FLD_MWD_SPI_SPI_AHB_BUF_RERR(SPI_AHB_BUF_RERR))                       \
                ))



#endif /*__LIGHTELF_SPI_REG_H__*/
// vim:ft=c:nowrap:noma
