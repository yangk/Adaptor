
//  Memory map file to generate linker scripts for programs to run on the XT2000

// $Id: memmap.xmm,v 1.1 2015/08/11 07:40:21 tgni Exp $

// Customer ID=4869; Build=0x172a8; Copyright (c) 2006 by Tensilica Inc.  ALL RIGHTS RESERVED.
// These coded instructions, statements, and computer programs are the
// copyrighted works and confidential proprietary information of Tensilica Inc.
// They may not be modified, copied, reproduced, distributed, or disclosed to
// third parties in any manner, medium, or form, in whole or in part, without
// the prior written consent of Tensilica Inc.

ENTRY=_start
ROMING=true
VECBASE=0x1001fc00

//  Show extra XT2000 memory map details.
INCLUDE_XT2000_MEMORIES = try


// A memory map is a sequence of memory descriptions and
// optional parameter assignments.
//
// Each memory description has the following format:
//   BEGIN <name>
//     <addr> [,<paddr>] : <mem-type> : <mem-name> : <size> [,<psize>]
//                       : [writable] [,executable] [,device] ;
//     <segment>*
//   END <name>
//
// where each <segment> description has the following format:
//     <seg-name> : F|C : <start-addr> - <end-addr> [ : STACK ] [ : HEAP ]
//                : <section-name>* ;
//
// Each parameter assignment is a keyword/value pair in the following format:
//   <keyword> = <value>                (no spaces in <value>)
// or
//   <keyword> = "<value>"              (spaces allowed in <value>)
//
// The following primitive is also defined:
//   PLACE SECTIONS( <section-name>* ) { WITH_SECTION(<section-name>)
//                                       | IN_SEGMENT(<seg-name>) }
//
// Please refer to the Xtensa LSP Reference Manual for more details.
//

BEGIN ram0
0x10000000: sysram : lram : 0x20000  : executable, writable ;
 sysinfo: C : 0x10000000 - 0x100000ff : .sysinfo.literal;
 iram0_0 : C : 0x10000150 - 0x1001fbff : .dram0.literal .dram0.data .dram0.rodata .iram0.literal .iram0.text .dram0.bss;
 WindowVectors.text : F : 0x1001fc00 - 0x1001fd77 : .WindowVectors.text;
 iram1 : C : 0x1001fd78 - 0x1001fd7f : .Level2InterruptVector.literal;
 Level2InterruptVector.text : F : 0x1001fd80 - 0x1001fdb7 : .Level2InterruptVector.text;
 iram3 : C : 0x1001fdb8 - 0x1001fdbf : .Level3InterruptVector.literal;
 Level3InterruptVector.text : F : 0x1001fdc0 - 0x1001fdf7 : .Level3InterruptVector.text;
 iram5 : C : 0x1001fdf8 - 0x1001fdff : .Level4InterruptVector.literal;
 Level4InterruptVector.text : F : 0x1001fe00 - 0x1001fe37 : .Level4InterruptVector.text;
 iram7 : C : 0x1001fe38 - 0x1001fe3f : .Level5InterruptVector.literal;
 Level5InterruptVector.text : F : 0x1001fe40 - 0x1001fe77 : .Level5InterruptVector.text;
 iram9 : C : 0x1001fe78 - 0x1001fe7f : .DebugExceptionVector.literal;
 DebugExceptionVector.text : F : 0x1001fe80 - 0x1001feb7 : .DebugExceptionVector.text;
 iram11 : C : 0x1001feb8 - 0x1001febf : .NMIExceptionVector.literal;
 NMIExceptionVector.text : F : 0x1001fec0 - 0x1001fef7 : .NMIExceptionVector.text;
 iram13 : C : 0x1001fef8 - 0x1001feff : .KernelExceptionVector.literal;
 KernelExceptionVector.text : F : 0x1001ff00 - 0x1001ff37 : .KernelExceptionVector.text;
 iram15 : C : 0x1001ff38 - 0x1001ff3f : .UserExceptionVector.literal;
 UserExceptionVector.text : F : 0x1001ff40 - 0x1001ff77 : .UserExceptionVector.text;
 iram17 : C : 0x1001ff78 - 0x1001ffbf : .DoubleExceptionVector.literal;
 DoubleExceptionVector.text : F : 0x1001ffc0 - 0x1001ffff : .DoubleExceptionVector.text;
END ram0

BEGIN srom
0xfe000000: sysrom : srom : 0x200000  : executable ;
 ResetVector.text : F : 0xfe000000 - 0xfe0002ff : .ResetVector.text;
 srom0 : C : 0xfe000300 - 0xfe1fffff : .srom.rodata .srom.literal .srom.text .rom.store;
END srom

BEGIN sram
0x00000000: sysram : sram : 0x200000  : executable, writable ;
 sram30 : C : 0x00180000 - 0x001800ff : .ResetEpilog.literal;
 ResetEpilog.text : C : 0x00180100 - 0x001803ff : .ResetEpilog.text;
 sram32 : C : 0x00180400 - 0x001804ff :  .secstart.literal;
 secstart.text : C : 0x00180500 - 0x001827ff : .secstart.text;
 sram34 : C : 0x00182800 - 0x001fffff :  STACK :  HEAP :  .sram.rodata .rodata .lit4 .sram.literal .literal .ResetVector.literal .sram.text .text .sram.data .data .sram.bss .bss;
END sram
